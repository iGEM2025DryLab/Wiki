---
export interface Props {
  title?: string;
  subtitle?: string;
}

const { 
  title = "Lychee Guardians", 
  subtitle = "Extending Lychee Freshness with Synthetic Biology"
} = Astro.props;
---

<section class="hero-intro bg-white fixed top-0 left-0 w-full z-10 overflow-hidden min-h-screen flex items-center justify-center">
  <div class="text-center relative">
    <!-- Introduction text that appears first -->
    <div id="intro-text" class="opacity-0">
      <span class="text-3xl md:text-5xl font-light text-gray-800">We are</span>
    </div>
    
    <!-- "And we work on" text - initially hidden, appears on scroll -->
    <div id="work-text" class="absolute top-0 left-0 opacity-0 text-3xl md:text-5xl font-light text-gray-800">
      <span>And we work on</span>
    </div>
    
    <!-- Handwritten team name - reserve space to prevent layout shift -->
    <div id="handwritten-name" class="mt-6 relative">
      <h1 class="handwritten-text text-7xl md:text-9xl font-bold text-lychee-500 min-h-[5rem] md:min-h-[8rem]" 
          style="font-family: 'Kalam', cursive;" 
          data-title={title}>
        <span id="handwritten-letters"></span>
      </h1>
      
      <!-- Lychee character image - positioned at right bottom of text -->
      <div id="lychee-character" class="absolute opacity-0 transition-opacity duration-1000" 
           style="bottom: -20px; right: -60px;">
        <img src="/logo.jpg" alt="Lychee Character" class="w-20 h-20 md:w-24 md:h-24 object-contain" />
      </div>
    </div>
  </div>
</section>


<style>
  @import url('https://fonts.googleapis.com/css2?family=Kalam:wght@400;700&display=swap');
  
  .handwritten-text {
    position: relative;
    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));
  }
  
  .letter {
    display: inline-block;
    opacity: 0;
    transform: scale(0.3) rotate(-8deg) translateY(30px);
    animation: writeIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
    transform-origin: bottom center;
  }
  
  @keyframes writeIn {
    0% {
      opacity: 0;
      transform: scale(0.3) rotate(-8deg) translateY(30px);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.15) rotate(2deg) translateY(-8px);
    }
    100% {
      opacity: 1;
      transform: scale(1) rotate(0deg) translateY(0);
    }
  }
  
  .letter.space {
    width: 0.5em;
  }
  
  /* Slight wobble after all letters are written */
  .handwritten-text.complete {
    animation: subtleWobble 6s ease-in-out 1s infinite;
  }
  
  @keyframes subtleWobble {
    0%, 100% { transform: rotate(0deg) translateY(0); }
    25% { transform: rotate(-0.1deg) translateY(0.5px); }
    50% { transform: rotate(0deg) translateY(0); }
    75% { transform: rotate(0.08deg) translateY(-0.5px); }
  }
  
  .fade-in {
    animation: fadeInUp 1s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const introText = document.getElementById('intro-text');
    const workText = document.getElementById('work-text');
    const handwrittenName = document.getElementById('handwritten-name');
    const handwrittenLetters = document.getElementById('handwritten-letters');
    const handwrittenText = document.querySelector('.handwritten-text');
    const titleElement = document.querySelector('[data-title]');
    const fullText = titleElement?.getAttribute('data-title') || 'Lychee Guardians';
    
    let animationComplete = false;
    let lycheeSpan = null;
    let guardiansSpan = null;
    
    // Step 1: Show "We are" after a brief delay
    setTimeout(() => {
      if (introText) {
        introText.classList.add('fade-in');
        introText.style.opacity = '1';
      }
    }, 1000);
    
    // Step 2: Start handwritten letter animation
    setTimeout(() => {
      // Create handwritten effect letter by letter
      if (handwrittenLetters) {
        let letterIndex = 0;
        
        // Create word containers first
        lycheeSpan = document.createElement('span');
        lycheeSpan.id = 'lychee-word';
        lycheeSpan.className = 'inline-block transition-transform duration-1000';
        
        const spaceSpan = document.createElement('span');
        spaceSpan.className = 'inline-block';
        spaceSpan.innerHTML = '&nbsp;';
        
        guardiansSpan = document.createElement('span');
        guardiansSpan.id = 'guardians-word';
        guardiansSpan.className = 'inline-block transition-all duration-1000';
        
        handwrittenLetters.appendChild(lycheeSpan);
        handwrittenLetters.appendChild(spaceSpan);
        handwrittenLetters.appendChild(guardiansSpan);
        
        function writeNextLetter() {
          if (letterIndex < fullText.length) {
            const letter = fullText[letterIndex];
            const letterSpan = document.createElement('span');
            
            if (letter === ' ') {
              // Skip the space - it's already handled by spaceSpan
            } else {
              letterSpan.textContent = letter;
              letterSpan.classList.add('letter');
              
              // Stagger the animation delays
              letterSpan.style.animationDelay = `${letterIndex * 0.15}s`;
              
              // Add to appropriate word span
              if (letterIndex < 6) { // "Lychee" is first 6 letters
                lycheeSpan.appendChild(letterSpan);
              } else if (letterIndex > 6) { // "Guardians" is after space
                guardiansSpan.appendChild(letterSpan);
              }
            }
            
            letterIndex++;
            setTimeout(writeNextLetter, 120);
          } else {
            // All letters written - add wobble effect
            setTimeout(() => {
              if (handwrittenText) {
                handwrittenText.classList.add('complete');
              }
              
              animationComplete = true;
              
              // Show lychee character
              const lycheeCharacter = document.getElementById('lychee-character');
              if (lycheeCharacter) {
                lycheeCharacter.style.opacity = '1';
              }
              
              // Trigger navigation appearance
              setTimeout(() => {
                const event = new CustomEvent('heroAnimationComplete');
                document.dispatchEvent(event);
              }, 1000);
            }, 800);
          }
        }
        
        writeNextLetter();
      }
    }, 2500);
    
    // Scroll handler for transition effect
    let transitionComplete = false;
    
    function handleScroll(event) {
      if (!animationComplete) return;
      
      const scrollY = window.scrollY;
      const animationZone = window.innerHeight * 0.9; // Animation zone
      const heroSection = document.querySelector('.hero-intro');
      
      if (scrollY <= animationZone && !transitionComplete) {
        // Show hero and run animations
        if (heroSection) {
          heroSection.style.display = 'flex';
        }
        
        // Calculate progress for smooth animation based on scroll position
        const progress = Math.min(scrollY / animationZone, 1); // 0 to 1
        
        // "We are" fade out (starts at 20% progress)
        if (introText) {
          const weAreProgress = Math.max(0, (progress - 0.2) / 0.4); // 20% to 60%
          introText.style.opacity = Math.max(0, 1 - weAreProgress);
          introText.style.transform = `translateY(${-20 * weAreProgress}px)`;
        }
        
        // "Guardians" fade out (starts at 30% progress)
        if (guardiansSpan) {
          const guardiansProgress = Math.max(0, (progress - 0.3) / 0.4); // 30% to 70%
          guardiansSpan.style.opacity = Math.max(0, 1 - guardiansProgress);
          guardiansSpan.style.transform = `translateY(${20 * guardiansProgress}px)`;
        }
        
        // "Lychee" move right (starts at 40% progress)
        if (lycheeSpan) {
          const lycheeProgress = Math.max(0, (progress - 0.4) / 0.5); // 40% to 90%
          lycheeSpan.style.transform = `translateX(${120 * lycheeProgress}px)`;
        }
        
        // "And we work on" fade in (starts at 50% progress)
        if (workText) {
          const workProgress = Math.max(0, (progress - 0.5) / 0.4); // 50% to 90%
          workText.style.opacity = workProgress;
          workText.style.transform = `translateX(${-20 * (1 - workProgress)}px)`;
        }
        
        // Mark as complete when reaching the end
        if (progress >= 1) {
          transitionComplete = true;
        }
      } else if (scrollY > animationZone) {
        // Hide hero section when past animation zone
        if (heroSection) {
          heroSection.style.display = 'none';
        }
      }
    }
    
    // Add scroll listener
    window.addEventListener('scroll', handleScroll);
    
  });
</script>