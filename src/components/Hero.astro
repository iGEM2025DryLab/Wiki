---
export interface Props {
  title?: string;
  subtitle?: string;
  showMascot?: boolean;
}

const { 
  title = "Lychee Guardians", 
  subtitle = "Extending Lychee Freshness with Synthetic Biology",
  showMascot = true 
} = Astro.props;
---

<!-- Handwriting Animation Hero Section - Full Screen -->
<section class="hero-handwriting bg-cream-50 relative overflow-hidden" id="handwriting-hero" style="height: 100vh;">
  <div class="absolute inset-0 flex items-center justify-center" style="padding-top: 80px;">
    <div class="text-center relative max-w-6xl mx-auto px-4">
      <!-- Introduction text that appears first -->
      <div id="intro-text" class="opacity-0 mb-8">
        <span class="text-2xl md:text-3xl font-bold text-ink-900">We are</span>
      </div>
      
      <!-- Handwritten team name - much larger for full screen impact -->
      <div id="handwritten-name" class="relative">
        <div class="handwritten-text text-8xl md:text-[10rem] font-bold text-lychee-500 leading-tight" 
            style="font-family: 'Kalam', cursive;" 
            data-title={title}>
          <div class="text-center">
            <div id="handwritten-line1" class="mb-2"></div>
            <div id="handwritten-line2"></div>
          </div>
        </div>
      </div>
      
      <!-- Scroll down prompt - appears after handwriting is complete -->
      <div id="scroll-prompt" class="opacity-0 transition-all duration-1000 mt-8">
        <div class="text-center">
          <p class="text-xl md:text-2xl font-bold text-ink-900 mb-2">Scroll Down</p>
          <p class="text-sm md:text-base font-semibold text-ink-800 mb-3">to know how we</p>
          <p class="text-2xl md:text-3xl font-bold text-lychee-500 mb-6 drop-shadow-lg">make lychees fresh again</p>
          
          <!-- Double V-shaped Arrow indicators -->
          <div class="flex justify-center">
            <div class="scroll-indicator-container">
              <!-- First V-shaped arrow -->
              <div class="arrow-bounce">
                <svg class="w-12 h-12 text-lychee-500 mx-auto" fill="none" stroke="currentColor" stroke-width="3" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6 9l6 6 6-6"/>
                </svg>
              </div>
              <!-- Second V-shaped arrow for double effect -->
              <div class="mt-2 arrow-bounce" style="animation-delay: 0.3s;">
                <svg class="w-10 h-10 text-lychee-400 mx-auto opacity-70" fill="none" stroke="currentColor" stroke-width="2.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6 9l6 6 6-6"/>
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Lychee character mascot - positioned at true page right edge -->
  {showMascot && (
    <div id="lychee-character" class="absolute opacity-0 transition-all duration-1000" 
         style="bottom: 10%; right: 1rem; transform: scale(1); z-index: 10;">
      <div class="relative">
        <div class="w-32 h-32 md:w-40 md:h-40 bg-lychee-100 rounded-full flex items-center justify-center">
          <span class="text-5xl md:text-6xl">üçí</span>
        </div>
        <!-- Speech bubble -->
        <div class="absolute -top-20 -left-32 bg-white rounded-lg px-4 py-3 shadow-lg border-2 border-lychee-200 opacity-0" id="mascot-speech">
          <p class="text-base text-ink-700 whitespace-nowrap font-medium">Ready to save lychees!</p>
          <div class="absolute bottom-0 left-12 transform translate-y-full">
            <div class="w-0 h-0 border-l-6 border-r-6 border-t-10 border-transparent border-t-white"></div>
          </div>
        </div>
      </div>
    </div>
  )}
  
  <!-- Background decoration optimized for full screen -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="absolute -top-40 -right-32 w-96 h-96 bg-lychee-100 rounded-full opacity-10 animate-pulse"></div>
    <div class="absolute -bottom-40 -left-32 w-96 h-96 bg-leaf-100 rounded-full opacity-10 animate-pulse" style="animation-delay: 1s;"></div>
    <div class="absolute top-1/4 left-1/4 w-32 h-32 bg-lychee-50 rounded-full opacity-20 animate-bounce" style="animation-duration: 4s; animation-delay: 2s;"></div>
    <div class="absolute bottom-1/4 right-1/4 w-24 h-24 bg-leaf-50 rounded-full opacity-20 animate-bounce" style="animation-duration: 5s; animation-delay: 3s;"></div>
  </div>
</section>

<!-- Enhanced CSS Styles -->
<style>
  @import url('https://fonts.googleapis.com/css2?family=Kalam:wght@400;700&display=swap');
  
  .handwritten-text {
    position: relative;
    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));
  }
  
  .letter {
    display: inline-block;
    opacity: 0;
    transform: scale(0.3) rotate(-8deg) translateY(30px);
    animation: writeIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
    transform-origin: bottom center;
  }
  
  @keyframes writeIn {
    0% {
      opacity: 0;
      transform: scale(0.3) rotate(-8deg) translateY(30px);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.15) rotate(2deg) translateY(-8px);
    }
    100% {
      opacity: 1;
      transform: scale(1) rotate(0deg) translateY(0);
    }
  }
  
  .letter.space {
    width: 0.5em;
  }
  
  .handwritten-text.complete {
    animation: subtleWobble 6s ease-in-out 1s infinite;
  }
  
  @keyframes subtleWobble {
    0%, 100% { transform: rotate(0deg) translateY(0); }
    25% { transform: rotate(-0.1deg) translateY(0.5px); }
    50% { transform: rotate(0deg) translateY(0); }
    75% { transform: rotate(0.08deg) translateY(-0.5px); }
  }
  
  .fade-in {
    animation: fadeInUp 1s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .intro-text-animate {
    animation: introSlideUp 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  @keyframes introSlideUp {
    0% {
      opacity: 0;
      transform: translateY(2rem);
    }
    30% {
      opacity: 1;
      transform: translateY(0);
    }
    70% {
      opacity: 1;
      transform: translateY(0);
    }
    100% {
      opacity: 1;
      transform: translateY(-1rem);
    }
  }
  
  /* SVG writing stroke animation */
  .writing-stroke {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: writeStroke 2s ease-in-out forwards;
  }
  
  @keyframes writeStroke {
    to {
      stroke-dashoffset: 0;
    }
  }
  
  /* Enhanced mascot animations */
  #lychee-character {
    animation: mascotBounce 2s ease-in-out 3s infinite;
  }
  
  @keyframes mascotBounce {
    0%, 100% { transform: scale(0.8) translateY(0); }
    50% { transform: scale(0.85) translateY(-5px); }
  }
  
  /* Scroll transition effects */
  .scroll-transition {
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Enhanced scroll indicator animations */
  .scroll-indicator-container {
    animation: scrollPulse 2s ease-in-out infinite;
  }
  
  @keyframes scrollPulse {
    0%, 100% { transform: scale(1); opacity: 0.8; }
    50% { transform: scale(1.05); opacity: 1; }
  }
  
  
  .arrow-bounce {
    animation: arrowBounce 2s ease-in-out infinite;
  }
  
  @keyframes arrowBounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-8px); }
    60% { transform: translateY(-4px); }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Reset any existing state
    const heroSection = document.getElementById('handwriting-hero');
    if (!heroSection) return;
    
    const introText = document.getElementById('intro-text');
    const handwrittenContainer = document.getElementById('handwritten-name');
    const handwrittenText = document.querySelector('.handwritten-text');
    const lycheeCharacter = document.getElementById('lychee-character');
    const mascotSpeech = document.getElementById('mascot-speech');
    const scrollPrompt = document.getElementById('scroll-prompt');
    const titleElement = document.querySelector('[data-title]');
    const fullText = titleElement?.getAttribute('data-title') || 'Lychee Guardians';
    
    // Reset all elements to initial state
    if (introText) {
      introText.style.opacity = '0';
      introText.classList.remove('intro-text-animate');
    }
    if (handwrittenText) {
      handwrittenText.classList.remove('complete');
    }
    if (lycheeCharacter) {
      lycheeCharacter.style.opacity = '0';
    }
    if (mascotSpeech) {
      mascotSpeech.style.opacity = '0';
    }
    if (scrollPrompt) {
      scrollPrompt.style.opacity = '0';
    }
    
    // Clear any existing content in handwritten lines
    const line1 = document.getElementById('handwritten-line1');
    const line2 = document.getElementById('handwritten-line2');
    if (line1) line1.innerHTML = '';
    if (line2) line2.innerHTML = '';
    
    let animationComplete = false;
    let isWriting = false;
    let scrollInterrupted = false;
    let letterIndex = 0;
    let writeTimeout = null;
    let lycheeSpan, guardiansSpan;
    
    // Clear any existing timeouts
    if (window.heroWriteTimeout) {
      clearTimeout(window.heroWriteTimeout);
    }
    if (window.heroIntroTimeout) {
      clearTimeout(window.heroIntroTimeout);
    }
    if (window.heroStartTimeout) {
      clearTimeout(window.heroStartTimeout);
    }
    
    // Scroll interruption detection
    let hasScrolled = false;
    function handleScroll() {
      if (isWriting && !scrollInterrupted && !hasScrolled) {
        hasScrolled = true;
        scrollInterrupted = true;
        if (writeTimeout) {
          clearTimeout(writeTimeout);
        }
        completeAnimation();
      }
    }
    
    // Complete animation instantly with effects
    function completeAnimation() {
      // Complete remaining letters instantly with animation
      for (let i = letterIndex; i < fullText.length; i++) {
        const letter = fullText[i];
        if (letter !== ' ') {
          const letterSpan = document.createElement('span');
          letterSpan.textContent = letter;
          letterSpan.classList.add('letter');
          letterSpan.style.animationDelay = '0s';
          letterSpan.style.animationDuration = '0.3s';
          
          if (i < 6) {
            lycheeSpan.appendChild(letterSpan);
          } else if (i > 6) {
            guardiansSpan.appendChild(letterSpan);
          }
        }
      }
      
      isWriting = false;
      
      // Show all elements with faster timing
      setTimeout(() => {
        if (handwrittenText) {
          handwrittenText.classList.add('complete');
        }
        
        if (lycheeCharacter) {
          lycheeCharacter.style.opacity = '1';
          setTimeout(() => {
            if (mascotSpeech) {
              mascotSpeech.style.opacity = '1';
            }
          }, 200);
        }
        
        setTimeout(() => {
          if (scrollPrompt) {
            scrollPrompt.style.opacity = '1';
            scrollPrompt.style.transform = 'translateY(0)';
          }
          
          animationComplete = true;
          
          // Immediately trigger navigation and other elements
          const event = new CustomEvent('heroAnimationComplete');
          document.dispatchEvent(event);
        }, 400);
      }, 300);
    }
    
    // Add scroll listener
    window.addEventListener('scroll', handleScroll, { passive: true });
    
    // Step 1: Show "We are" after a brief delay
    window.heroIntroTimeout = setTimeout(() => {
      if (introText) {
        introText.classList.add('intro-text-animate');
        introText.style.opacity = '1';
      }
    }, 1000);
    
    // Step 2: Start handwritten letter animation
    window.heroStartTimeout = setTimeout(() => {
      if (handwrittenContainer) {
        isWriting = true;
        letterIndex = 0;
        
        // Create line containers for two-line layout
        const line1 = document.getElementById('handwritten-line1');
        const line2 = document.getElementById('handwritten-line2');
        
        lycheeSpan = document.createElement('span');
        lycheeSpan.className = 'inline-block';
        
        guardiansSpan = document.createElement('span');
        guardiansSpan.className = 'inline-block';
        
        line1.appendChild(lycheeSpan);
        line2.appendChild(guardiansSpan);
        
        function writeNextLetter() {
          if (scrollInterrupted) return;
          
          if (letterIndex < fullText.length) {
            const letter = fullText[letterIndex];
            const letterSpan = document.createElement('span');
            
            if (letter === ' ') {
              // Skip space - will be handled by line break
            } else {
              letterSpan.textContent = letter;
              letterSpan.classList.add('letter');
              letterSpan.style.animationDelay = `${letterIndex * 0.2}s`;
              
              // Add to appropriate line
              if (letterIndex < 6) { // "Lychee" - first line
                lycheeSpan.appendChild(letterSpan);
              } else if (letterIndex > 6) { // "Guardians" - second line
                guardiansSpan.appendChild(letterSpan);
              }
            }
            
            letterIndex++;
            window.heroWriteTimeout = setTimeout(writeNextLetter, 200);
            writeTimeout = window.heroWriteTimeout;
          } else {
            // Normal completion
            isWriting = false;
            // Animation complete - show mascot and scroll prompt
            setTimeout(() => {
              if (handwrittenText) {
                handwrittenText.classList.add('complete');
              }
              
              // Show lychee character
              if (lycheeCharacter) {
                lycheeCharacter.style.opacity = '1';
                setTimeout(() => {
                  if (mascotSpeech) {
                    mascotSpeech.style.opacity = '1';
                  }
                }, 500);
              }
              
              // Show scroll prompt after mascot appears
              setTimeout(() => {
                if (scrollPrompt) {
                  scrollPrompt.style.opacity = '1';
                  scrollPrompt.style.transform = 'translateY(0)';
                }
                
                animationComplete = true;
                
                // Trigger navigation appearance
                setTimeout(() => {
                  const event = new CustomEvent('heroAnimationComplete');
                  document.dispatchEvent(event);
                }, 1000);
              }, 1500);
            }, 800);
          }
        }
        
        writeNextLetter();
      }
    }, 2500);
  });
</script>